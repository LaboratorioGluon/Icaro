{"config":{"lang":["en","es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u00cdcaro's Sensor Box","text":""},{"location":"#introduction","title":"Introduction","text":"<p>The \u00cdcaro project aims to launch a stratospheric balloon (up to 20-30 km altitude), carrying several payloads, including: - A radio amateur team with APRS and a U/V repeater. - Our sensor module.</p> <p>This initiative is organized and streamed on Twitch by Araba_ST and Labgluon.</p> <p>Info</p> <p>Our goal is to develop more complex systems while tackling the added challenge of being the first community-driven project with Twitch participants. Additionally, we face the uncertainty of managing remote teams who have never worked together before.</p>"},{"location":"#project-objectives","title":"Project Objectives","text":"<ul> <li>WiFi communication testing with an ESP32-CAM (or equivalent) to determine maximum range.</li> <li>Improve 2.4 GHz antennas.</li> <li>Implement code for reading and transmitting video via WiFi on the ESP32.</li> <li>Telemetry data recording during the ascent and transmission via LoRa.</li> <li>Design of modular PCBs for:</li> <li>Reading GPS/IMU/Temperature/Barometer sensors, etc.</li> <li>Voltage regulation.</li> </ul>"},{"location":"#additional-ideas","title":"Additional Ideas","text":"<ul> <li>Implement an automatic antenna tracking system to always point at the balloon.</li> <li>Integrate solar panels.</li> <li>Expose an ESP32 to the elements and determine when it stops functioning.</li> </ul>"},{"location":"#project-structure","title":"Project Structure","text":"<p><pre><code>Icaro\n\u251c\u2500\u2500 Docs/                    # General documentation\n\u2502   \u251c\u2500\u2500 NamingAndCoding.md   # File/variable naming conventions\n\u2502   \u2514\u2500\u2500 Design.md            # High-level design\n\u251c\u2500\u2500 IcaroSW/                 # Main software\n\u251c\u2500\u2500 Mechanical/              # 3D and mechanical designs\n\u251c\u2500\u2500 Modules/                 # Hardware modules\n\u2502   \u251c\u2500\u2500 &lt;Module&gt;/            # One folder per board\n\u2502   \u2502   \u251c\u2500\u2500 Doc/             # Documentation\n\u2502   \u2502   \u251c\u2500\u2500 PCB/             # PCB design\n\u2502   \u2502   \u251c\u2500\u2500 Software/        # Module-specific software\n\u2502   \u2502   \u2514\u2500\u2500 Library/         # Software library for the module\n\u2502   \u2514\u2500\u2500 ...\n</code></pre> Each designed board will have a dedicated software library, while IcaroSW will contain the main mission software.</p>"},{"location":"supplyBoard/hardware/","title":"Supply Board","text":"<p>Board responsible for adapting and distributing power to the rest of the system.</p>"},{"location":"supplyBoard/hardware/#features","title":"Features","text":"<p>The Supply Board must be capable of generating 5V and 3.3V from a 1S/2S battery voltage, as well as being able to turn outputs on/off and measure power consumption on each of its outputs.</p>"},{"location":"supplyBoard/hardware/#main-components","title":"Main Components","text":"<ul> <li>Processor: <code>STM32L031</code></li> <li>Buck-Boost: <code>TPS63070</code></li> <li>Buck converter for 3.3V: <code>TPS564257</code></li> </ul>"},{"location":"supplyBoard/hardware/#specifications","title":"Specifications","text":""},{"location":"supplyBoard/hardware/#design","title":"Design","text":""},{"location":"supplyBoard/hardware/#interfaces","title":"Interfaces","text":""},{"location":"supplyBoard/hardware/#connectors","title":"Connectors","text":"ID Name Voltage Current Connector Description <code>J1</code> <code>CI_BATT</code> <code>3.3 V - 15.0 V</code> <code>2 A</code> XT-30 Battery input connector. <code>J2</code> <code>CI_USB</code> <code>5 V</code> <code>300 mA</code> micro-USB USB charging connector. <code>J3</code> <code>CIO_MAIN_CONNECTOR</code> <code>-</code> <code>-</code> 02x08 H2.0 Main connector to the rest of the boards."},{"location":"supplyBoard/hardware/#power-supplies","title":"Power Supplies","text":"Name Voltage Current Interface Description <code>VI_BATT</code> <code>3.3 V - 15.0 V</code> <code>2 A</code> <code>CI_BATT</code> Battery input connector. <code>VI_USB</code> <code>5 V</code> <code>300 mA</code> <code>CI_USB</code> USB charging connector. <code>VO_5V</code> <code>5 V</code> <code>1000 mA</code> <code>CIO_MAIN_CONNECTOR</code> 5V output <code>VO_3V3</code> <code>3.3 V</code> <code>1000 mA</code> <code>CIO_MAIN_CONNECTOR</code> 3.3V output <code>VO_BYPASS</code> Same as <code>VI_BATT</code> <code>2 A</code> <code>CIO_MAIN_CONNECTOR</code> Power bypass"},{"location":"supplyBoard/hardware/#signals","title":"Signals","text":"Name Voltage Interface Description <code>CONTROL_ONOFF_BYPASS</code> <code>3.3 V</code> <code>CIO_MAIN_CONNECTOR</code> Control signal to turn the <code>VO_BYPASS</code> output on and off. <code>CONTROL_ONOFF_5V</code> <code>3.3 V</code> <code>CIO_MAIN_CONNECTOR</code> Control signal to turn the <code>VO_5V</code> output on and off. <code>CURRENT_SENSI_BATT</code> <code>Variable</code> <code>CIO_MAIN_CONNECTOR</code> Voltage dependent on the current entering via <code>VI_BATT</code>. <code>CURRENT_SENSE_BYPASS</code> <code>Variable</code> <code>CIO_MAIN_CONNECTOR</code> Voltage dependent on the current exiting via <code>VO_BYPASS</code>. <code>CURRENT_SENSE_5V</code> <code>Variable</code> <code>CIO_MAIN_CONNECTOR</code> Voltage dependent on the current exiting via <code>VO_5V</code>. <code>CURRENT_SENSE_3V3</code> <code>Variable</code> <code>CIO_MAIN_CONNECTOR</code> Voltage dependent on the current exiting via <code>VO_3V3</code>."},{"location":"supplyBoard/software/","title":"Supply Board - Software","text":""},{"location":"supplyBoard/software/#pinout","title":"Pinout","text":"<p>Pin configuration for the STM32L031.</p> Pin Mode Alt. Function Description PORT A PA0 <code>ANALOG</code> - V_IN Voltage PA1 <code>ANALOG</code> - 5V Voltage PA2 <code>ANALOG</code> - 3.3V Current PA3 <code>ANALOG</code> - 5V Current PA4 <code>ANALOG</code> - IN Current PA5 <code>ANALOG</code> - BYPASS Current PA6 <code>ANALOG</code> - Temperature Sensor PA7 <code>ANALOG</code> - Temperature Sensor PA8 <code>ANALOG</code> - Temperature Sensor PA9 <code>AF_PP</code> <code>TBD</code> I2C SCL PA10 <code>AF_PP</code> <code>TBD</code> I2C SDA PORT B PB6 <code>AF_PP</code> <code>USART2</code> UART PB7 <code>AF_PP</code> <code>USART2</code> UART PORT C PC14 <code>OUTPUT_PP</code> - Enable BYPASS PC15 <code>OUTPUT_PP</code> - Enable 5V"},{"location":"supplyBoard/software/#peripherals","title":"Peripherals","text":""},{"location":"supplyBoard/software/#uart","title":"UART","text":"<ul> <li>BaudRate: 115200</li> <li>Parity: None</li> <li>Data Length: 8B</li> <li>Stop bits: 1</li> </ul>"},{"location":"supplyBoard/software/#i2c","title":"I2C","text":"<ul> <li>Mode: Slave</li> <li>Addr: 0x15? </li> <li>Clock: 400 KHz</li> </ul>"},{"location":"supplyBoard/software/#messages","title":"Messages","text":""},{"location":"es/#introduccion","title":"Introducci\u00f3n","text":"<p>El proyecto \u00cdcaro busca lanzar un globo estratosf\u00e9rico (hasta unos 20-30 km de altura), incluyendo varios equipos, entre ellos: - Un equipo de radioaficionados con APRS y Repetidor U/V. - Nuestro equipo de sensores.</p> <p>Este proyecto es parte de una iniciativa organizada y retransmitida por Araba_ST y Labgluon en Twitch.</p> <p>Info</p> <p>Nuestro objetivo es desarrollar equipos m\u00e1s complejos, con la dificultad adicional de ser el primer proyecto realizado en comunidad con la gente de Twitch. Tambi\u00e9n enfrentamos el reto de gestionar equipos remotos que no han trabajado juntos antes.</p>"},{"location":"es/#objetivos-del-proyecto","title":"Objetivos del Proyecto","text":"<ul> <li>Prueba de comunicaciones WiFi con ESP32-CAM (o equivalente) para determinar el m\u00e1ximo rango.</li> <li>Mejorar antenas de 2.4 GHz.</li> <li>Implementar el c\u00f3digo para la lectura y env\u00edo de v\u00eddeo por WiFi en el ESP32.</li> <li>Registro de datos de telemetr\u00eda de la subida y transmisi\u00f3n mediante LoRa.</li> <li>Dise\u00f1o de PCBs modulares para:</li> <li>Lectura de sensores GPS/IMU/Temp/Bar\u00f3metro, etc.</li> <li>Regulaci\u00f3n de voltajes.</li> </ul>"},{"location":"es/#otras-ideas","title":"Otras Ideas","text":"<ul> <li>Implementar un sistema de orientaci\u00f3n autom\u00e1tica de la antena hacia el globo.</li> <li>Integrar paneles solares.</li> <li>Exponer un ESP32 a la intemperie para estudiar su resistencia.</li> </ul>"},{"location":"es/#estructura-del-proyecto","title":"Estructura del Proyecto","text":"<p><pre><code>Icaro\n\u251c\u2500\u2500 Docs/                    # Documentaci\u00f3n general\n\u2502   \u251c\u2500\u2500 NamingAndCoding.md   # Normas para nombrar ficheros/variables...\n\u2502   \u2514\u2500\u2500 Design.md            # Dise\u00f1o a alto nivel\n\u251c\u2500\u2500 IcaroSW/                 # Software principal\n\u251c\u2500\u2500 Mechanical/              # Dise\u00f1os 3D y mec\u00e1nicos\n\u251c\u2500\u2500 Modules/                 # M\u00f3dulos de hardware\n\u2502   \u251c\u2500\u2500 &lt;Module&gt;/            # Carpeta por tarjeta\n\u2502   \u2502   \u251c\u2500\u2500 Doc/             # Documentaci\u00f3n\n\u2502   \u2502   \u251c\u2500\u2500 PCB/             # Dise\u00f1o de la PCB\n\u2502   \u2502   \u251c\u2500\u2500 Software/        # Software asociado\n\u2502   \u2502   \u2514\u2500\u2500 Library/         # Librer\u00eda para el m\u00f3dulo\n\u2502   \u2514\u2500\u2500 ...\n</code></pre> Cada tarjeta dise\u00f1ada contar\u00e1 con una librer\u00eda de software espec\u00edfica, mientras que en IcaroSW se desarrollar\u00e1 el software principal de la misi\u00f3n.</p>"},{"location":"es/supplyBoard/hardware/","title":"Supply Board","text":"<p>Tarjeta encargada de adaptar y distribuir la potencia al resto de placas.</p>"},{"location":"es/supplyBoard/hardware/#funcionalidades","title":"Funcionalidades","text":"<p>La Supply Board tiene que ser capaz de a partir de el voltaje de una bater\u00eda de 1S/2S generar 5V y 3V3, adem\u00e1s de ser capaz de encender/apagar y medir el consumo en cada una de sus salidas.</p>"},{"location":"es/supplyBoard/hardware/#componentes-principales","title":"Componentes principales","text":"<ul> <li>Procesador: <code>STM32L031</code><ul> <li>Reference Manual</li> <li>Datasheet</li> </ul> </li> <li>Buck-Boost: <code>TPS63070</code><ul> <li>Datasheet</li> </ul> </li> <li>Buck converter para 3V3: <code>TPS564257</code><ul> <li>Datasheet</li> </ul> </li> <li>Sensor Temperatura: <code>TMP235A4DCKR</code><ul> <li>Datasheet</li> </ul> </li> <li>Sensor de Corriente: <code>INA2180A4</code> (Deber\u00eda ser el A1)<ul> <li>Datasheet</li> </ul> </li> </ul>"},{"location":"es/supplyBoard/hardware/#specificaciones","title":"Specificaciones","text":""},{"location":"es/supplyBoard/hardware/#diseno","title":"Dise\u00f1o","text":""},{"location":"es/supplyBoard/hardware/#conectores","title":"Conectores","text":"ID Nombre Voltaje Corriente Connector Desc <code>J1</code> <code>CI_BATT</code> <code>3.3 V - 15.0 V</code> <code>2 A</code> XT-30 Connector de entrada de bater\u00eda. <code>J3</code> <code>CIO_MAIN_CONNECTOR</code> <code>-</code> <code>-</code> 02x12 Pin Header 2.54mm Connector principal al resto de placas"},{"location":"es/supplyBoard/hardware/#alimentaciones","title":"Alimentaciones","text":"Nombre Voltaje Corriente Interfaz Desc <code>VI_BATT</code> <code>3.3 V - 15.0 V</code> <code>2 A</code> <code>CI_BATT</code> Connector de entrada de bater\u00eda. <code>VI_USB</code> <code>5 V</code> <code>300 mA</code> <code>CI_USB</code> Conector de carga USB. <code>VO_5V</code> <code>5 V</code> <code>1000 mA</code> <code>CIO_MAIN_CONNECTOR</code> Salida de 5 V <code>VO_3V3</code> <code>3.3 V</code> <code>1000 mA</code> <code>CIO_MAIN_CONNECTOR</code> Salida de 3.3 V <code>VO_BYPASS</code> Igual que <code>VI_BATT</code> <code>2 A</code> <code>CIO_MAIN_CONNECTOR</code> Bypass de la alimentaci\u00f3n"},{"location":"es/supplyBoard/hardware/#senales","title":"Se\u00f1ales","text":"Nombre Voltaje Interfaz Desc <code>CONTROL_ONOFF_BYPASS</code> <code>3.3 V</code> <code>CIO_MAIN_CONNECTOR</code> Se\u00f1al de control para encender y apagar la salida <code>VO_BYPASS</code>. <code>CONTROL_ONOFF_5V</code> <code>3.3 V</code> <code>CIO_MAIN_CONNECTOR</code> Se\u00f1al de control para encender y apagar la salida <code>VO_5V</code>. <code>CURRENT_SENSI_BATT</code> <code>Variable</code> <code>CIO_MAIN_CONNECTOR</code> Voltaje dependiente de la corriente que entra por <code>VI_BATT</code>. <code>CURRENT_SENSE_BYPASS</code> <code>Variable</code> <code>CIO_MAIN_CONNECTOR</code> Voltaje dependiente de la corriente que sale por <code>VO_BYPASS</code>. <code>CURRENT_SENSE_5V</code> <code>Variable</code> <code>CIO_MAIN_CONNECTOR</code> Voltaje dependiente de la corriente que sale por <code>VO_5V</code>. <code>CURRENT_SENSE_3V3</code> <code>Variable</code> <code>CIO_MAIN_CONNECTOR</code> Voltaje dependiente de la corriente que sale por <code>VO_3V3</code>."},{"location":"es/supplyBoard/hardware/#_1","title":"Hardware","text":""},{"location":"es/supplyBoard/software/#pinout","title":"Pinout","text":"<p>Configuraci\u00f3n de los pines para el STM32L031.</p> Pin Modo Alt.Funci\u00f3n Desc. PUERTO A PA0 <code>ANALOG</code> - Voltaje V_IN PA1 <code>ANALOG</code> - Voltaje 5V PA2 <code>ANALOG</code> - Corriente 3v3 PA3 <code>ANALOG</code> - Corriente 5v PA4 <code>ANALOG</code> - Corriente IN PA5 <code>ANALOG</code> - Corriente BYPASS PA6 <code>ANALOG</code> - Sensor Temperatura PA7 <code>OUTPUT_PP</code> - CS0 PA8 <code>OUTPUT_PP</code> - CS1 PA9 <code>AF_PP</code> <code>TBD</code> I2C SCL PA10 <code>AF_PP</code> <code>TBD</code> I2C SDA PA13 NO USAR - SWDIO PA14 NO USAR - SWCLK PA15 <code>OUTPUT_PP</code> - Salida Para control de loop PUERTO B PB0 <code>AF_PP</code> <code>AF1_SPI1</code> SPI1 MISO PB1 <code>AF_PP</code> <code>AF0_SPI1</code> SPI1 MOSI PB3 <code>AF_PP</code> <code>AF0_SPI1</code> SPI1 SCK PB6 <code>AF_PP</code> <code>AF0_USART2</code> UART PB7 <code>AF_PP</code> <code>AF0_USART2</code> UART PUERTO C PC14 <code>OUTPUT_PP</code> - Enable de BYPASS PC15 <code>OUTPUT_PP</code> - Enable de 5V"},{"location":"es/supplyBoard/software/#perifericos","title":"Perif\u00e9ricos","text":""},{"location":"es/supplyBoard/software/#i2c","title":"I2C","text":"<ul> <li>Mode: Slave</li> <li>Addr: 0x15? </li> <li>Clock: 400 KHz</li> </ul> <p>## Mensajes</p>"}]}